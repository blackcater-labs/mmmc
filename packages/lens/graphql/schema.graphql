scalar Date
scalar DateTime
scalar Timestamp
scalar JSON
scalar JSONObject

enum UserRole {
  Admin
  User
}

"""User Information"""
type User {
  id: ID!
  name: String!
  email: String!
  role: UserRole!
  avatar: String
  createdAt: DateTime!
  updatedAt: DateTime
}

"""Library for storing items"""
type Library {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

"""Item is a book, comic or novel"""
interface Item {
  id: ID!
  title: String!
  description: String!
  cover: String
  publishedAt: Date
  createdAt: DateTime!
  updatedAt: DateTime
  chapters: [Chapter!]!
}

"""Mangas / Manhwas / Manhuas / Comics"""
type Manga implements Item {
  id: ID!
  title: String!
  description: String!
  cover: String
  publishedAt: Date
  createdAt: DateTime!
  updatedAt: DateTime
  chapters: [Chapter!]!
}

"""PDF Books"""
type Book implements Item {
  id: ID!
  title: String!
  description: String!
  cover: String
  publishedAt: Date
  createdAt: DateTime!
  updatedAt: DateTime
  chapters: [Chapter!]!

  isbn: String
  pageCount: Int
}

"""Epub/Txt Novels"""
type Novel implements Item {
  id: ID!
  title: String!
  description: String!
  cover: String
  publishedAt: Date
  createdAt: DateTime!
  updatedAt: DateTime
  chapters: [Chapter!]!

  wordCount: Int
}

type Chapter {
  id: ID!
  parentId: Int
  name: String!
  cover: String
  publishedAt: Date
  createdAt: DateTime!
  updatedAt: DateTime
}

enum PlaylistType {
  History
  Favorite
  Normal
}

type Playlist {
  id: ID!
  name: String!
  type: PlaylistType!
  createdAt: DateTime!
  updatedAt: DateTime
}

type Query {
  """Login user info"""
  me: User!

  """Search user by id"""
  user(id: ID!): User

  """Search users"""
  users(limit: Int = 10, offset: Int = 0): [User!]!

  """Search library by id"""
  library(id: ID!): Library

  """Search item by id"""
  item(id: ID!): Item

  """Search playlist by id"""
  playlist(id: ID!): Playlist
}

type LoginResponse {
  user: User!

  """JWT access token"""
  access_token: String!
}

type Mutation {
  """User login"""
  login(email: String!, password: String!): LoginResponse!

  """Register new user"""
  register(name: String!, email: String!, password: String!): User!
}
